apiVersion: run.tanzu.vmware.com/v1alpha1
kind: TanzuKubernetesCluster
metadata:
  annotations:
    tkg/plan: dev
  labels:
    tkg.tanzu.vmware.com/cluster-name: dev
  name: dev
  namespace: ns1
spec:
  distribution:
    version: 1.20.9+vmware.1-tkg.1.a4cee5b
  settings:
    network:
      cni:
        name: antrea
      pods:
        cidrBlocks:
        - 100.96.0.0/11
      serviceDomain: cluster.local
      services:
        cidrBlocks:
        - 100.64.0.0/13
    storage:
      classes:
      - pacific-gold-storage-policy
      defaultClass: pacific-gold-storage-policy
  topology:
    controlPlane:
      class: best-effort-small
      count: 1
      storageClass: pacific-gold-storage-policy
    workers:
      class: best-effort-large
      count: 5
      storageClass: pacific-gold-storage-policy
      volumes:
      - name: ephemeral-1
        mountPath: /var/lib
        capacity:
          storage: 50Gi
---
apiVersion: cluster.x-k8s.io/v1alpha3
kind: MachineHealthCheck
metadata:
  name: dev
  namespace: ns1
spec:
  clusterName: dev
  nodeStartupTimeout: 20m
  selector:
    matchLabels:
      node-pool: dev-worker-pool
  unhealthyConditions:
  - status: Unknown
    timeout: 5m
    type: Ready
  - status: "False"
    timeout: 12m
    type: Ready
---
apiVersion: cluster.x-k8s.io/v1alpha3
kind: MachineHealthCheck
metadata:
  name: dev-control-plane
  namespace: ns1
spec:
  clusterName: dev
  nodeStartupTimeout: 20m
  selector:
    matchLabels:
      cluster.x-k8s.io/control-plane: ""
  unhealthyConditions:
  - status: Unknown
    timeout: 5m
    type: Ready
  - status: "False"
    timeout: 12m
    type: Ready
---
apiVersion: addons.cluster.x-k8s.io/v1alpha3
kind: ClusterResourceSet
metadata:
  annotations:
    tkg.tanzu.vmware.com/addon-type: capabilities/capabilities-controller
  labels:
    cluster.x-k8s.io/cluster-name: dev
  name: dev-capabilities
  namespace: ns1
spec:
  clusterSelector:
    matchLabels:
      tkg.tanzu.vmware.com/cluster-name: dev
  resources:
  - kind: Secret
    name: dev-capabilities
  strategy: ApplyOnce
---
apiVersion: v1
kind: Secret
metadata:
  name: dev-capabilities
  namespace: ns1
stringData:
  value: |
    apiVersion: apiextensions.k8s.io/v1beta1
    kind: CustomResourceDefinition
    metadata:
      annotations:
        controller-gen.kubebuilder.io/version: v0.2.5
      creationTimestamp: null
      name: capabilities.run.tanzu.vmware.com
    spec:
      group: run.tanzu.vmware.com
      names:
        kind: Capability
        listKind: CapabilityList
        plural: capabilities
        singular: capability
      scope: Namespaced
      subresources:
        status: {}
      validation:
        openAPIV3Schema:
          description: Capability is the Schema for the capabilities API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Spec is the capability spec that has cluster queries.
              properties:
                queries:
                  description: Queries specifies set of queries that are evaluated.
                  items:
                    description: Query is a logical grouping of GVR, Object and PartialSchema queries.
                    properties:
                      groupVersionResources:
                        description: GroupVersionResources evaluates a slice of GVR queries.
                        items:
                          description: QueryGVR queries for an API group with the optional ability to check for API versions and resource.
                          properties:
                            group:
                              description: Group is the API group to check for in the cluster.
                              minLength: 1
                              type: string
                            name:
                              description: Name is the unique name of the query.
                              minLength: 1
                              type: string
                            resource:
                              description: Resource is the API resource to check for given an API group and a slice of versions. Specifying a Resource requires at least one version to be specified in Versions.
                              type: string
                            versions:
                              description: Versions is the slice of versions to check for in the specified API group.
                              items:
                                type: string
                              type: array
                          required:
                          - group
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      name:
                        description: Name is the unique name of the query.
                        minLength: 1
                        type: string
                      objects:
                        description: Objects evaluates a slice of Object queries.
                        items:
                          description: QueryObject represents any runtime.Object that could exist in a cluster with the ability to check for annotations.
                          properties:
                            name:
                              description: Name is the unique name of the query.
                              minLength: 1
                              type: string
                            objectReference:
                              description: ObjectReference is the ObjectReference to check for in the cluster.
                              properties:
                                apiVersion:
                                  description: API version of the referent.
                                  type: string
                                fieldPath:
                                  description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                                  type: string
                                kind:
                                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                                namespace:
                                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                  type: string
                                resourceVersion:
                                  description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                  type: string
                                uid:
                                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                  type: string
                              type: object
                            withAnnotations:
                              additionalProperties:
                                type: string
                              description: WithAnnotations are the annotations whose presence is checked in the object. The query succeeds only if all the annotations specified exists.
                              type: object
                            withoutAnnotations:
                              additionalProperties:
                                type: string
                              description: WithAnnotations are the annotations whose absence is checked in the object. The query succeeds only if all the annotations specified do not exist.
                              type: object
                          required:
                          - name
                          - objectReference
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      partialSchemas:
                        description: PartialSchemas evaluates a slice of PartialSchema queries.
                        items:
                          description: QueryPartialSchema queries for any OpenAPI schema that may exist on a cluster.
                          properties:
                            name:
                              description: Name is the unique name of the query.
                              minLength: 1
                              type: string
                            partialSchema:
                              description: PartialSchema is the partial OpenAPI schema that will be matched in a cluster.
                              minLength: 1
                              type: string
                          required:
                          - name
                          - partialSchema
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                    required:
                    - name
                    type: object
                  type: array
                  x-kubernetes-list-map-keys:
                  - name
                  x-kubernetes-list-type: map
              required:
              - queries
              type: object
            status:
              description: Status is the capability status that has results of cluster queries.
              properties:
                results:
                  description: Results represents the results of all the queries specified in the spec.
                  items:
                    description: Result represents the results of queries in Query.
                    properties:
                      groupVersionResources:
                        description: GroupVersionResources represents results of GVR queries in spec.
                        items:
                          description: QueryResult represents the result of a single query.
                          properties:
                            error:
                              description: Error indicates if an error occurred while processing the query.
                              type: boolean
                            errorDetail:
                              description: ErrorDetail represents the error detail, if an error occurred.
                              type: string
                            found:
                              description: Found is a boolean which indicates if the query condition succeeded.
                              type: boolean
                            name:
                              description: Name is the name of the query in spec whose result this struct represents.
                              minLength: 1
                              type: string
                            notFoundReason:
                              description: NotFoundReason provides the reason if the query condition fails. This is non-empty when Found is false.
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      name:
                        description: Name is the unique name of the query.
                        minLength: 1
                        type: string
                      objects:
                        description: Objects represents results of Object queries in spec.
                        items:
                          description: QueryResult represents the result of a single query.
                          properties:
                            error:
                              description: Error indicates if an error occurred while processing the query.
                              type: boolean
                            errorDetail:
                              description: ErrorDetail represents the error detail, if an error occurred.
                              type: string
                            found:
                              description: Found is a boolean which indicates if the query condition succeeded.
                              type: boolean
                            name:
                              description: Name is the name of the query in spec whose result this struct represents.
                              minLength: 1
                              type: string
                            notFoundReason:
                              description: NotFoundReason provides the reason if the query condition fails. This is non-empty when Found is false.
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      partialSchemas:
                        description: PartialSchemas represents results of PartialSchema queries in spec.
                        items:
                          description: QueryResult represents the result of a single query.
                          properties:
                            error:
                              description: Error indicates if an error occurred while processing the query.
                              type: boolean
                            errorDetail:
                              description: ErrorDetail represents the error detail, if an error occurred.
                              type: string
                            found:
                              description: Found is a boolean which indicates if the query condition succeeded.
                              type: boolean
                            name:
                              description: Name is the name of the query in spec whose result this struct represents.
                              minLength: 1
                              type: string
                            notFoundReason:
                              description: NotFoundReason provides the reason if the query condition fails. This is non-empty when Found is false.
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                    required:
                    - name
                    type: object
                  type: array
                  x-kubernetes-list-map-keys:
                  - name
                  x-kubernetes-list-type: map
              required:
              - results
              type: object
          type: object
      version: v1alpha1
      versions:
      - name: v1alpha1
        served: true
        storage: true
    ---
    apiVersion: v1
    kind: ServiceAccount
    metadata:
      labels:
        app: tanzu-capabilities-manager
      name: tanzu-capabilities-manager-sa
      namespace: tkg-system
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      name: tanzu-capabilities-manager-clusterrole
    rules:
    - apiGroups:
      - run.tanzu.vmware.com
      resources:
      - capabilities
      verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
    - apiGroups:
      - run.tanzu.vmware.com
      resources:
      - capabilities/status
      verbs:
      - get
      - patch
      - update
    - apiGroups:
      - run.tanzu.vmware.com
      resources:
      - tanzukubernetesreleases
      - tanzukubernetesreleases/status
      verbs:
      - get
      - list
      - watch
    - apiGroups:
      - run.tanzu.vmware.com
      resources:
      - tanzukubernetesclusters
      - tanzukubernetesclusters/status
      verbs:
      - get
      - list
      - watch
    - apiGroups:
      - clusterctl.cluster.x-k8s.io
      resources:
      - providers
      - providers/status
      verbs:
      - get
      - list
      - watch
    - apiGroups:
      - ""
      resources:
      - configmaps
      - namespaces
      - nodes
      verbs:
      - get
      - list
      - watch
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      name: tanzu-capabilities-manager-clusterrolebinding
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: tanzu-capabilities-manager-clusterrole
    subjects:
    - kind: ServiceAccount
      name: tanzu-capabilities-manager-sa
      namespace: tkg-system
    ---
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: tanzu-capabilities-manager
      name: tanzu-capabilities-controller-manager
      namespace: tkg-system
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: tanzu-capabilities-manager
      template:
        metadata:
          labels:
            app: tanzu-capabilities-manager
        spec:
          containers:
          - image: projects.registry.vmware.com/tkg/tanzu_core/capabilities/capabilities-controller-manager:v1.4.0
            imagePullPolicy: IfNotPresent
            name: manager
            resources:
              limits:
                cpu: 100m
                memory: 30Mi
              requests:
                cpu: 100m
                memory: 20Mi
          serviceAccount: tanzu-capabilities-manager-sa
          terminationGracePeriodSeconds: 10
          tolerations:
          - effect: NoSchedule
            key: node-role.kubernetes.io/master
type: addons.cluster.x-k8s.io/resource-set
---
apiVersion: v1
kind: Secret
metadata:
  labels:
    clusterctl.cluster.x-k8s.io/move: ""
    tkg.tanzu.vmware.com/cluster-name: dev
  name: dev-config-values
  namespace: ns1
stringData:
  value: |
    CLUSTER_NAME: dev
    CLUSTER_PLAN: dev
    NAMESPACE: ns1
    ENABLE_CEIP_PARTICIPATION: null
    TMC_REGISTRATION_URL: null
    CONTROL_PLANE_STORAGE_CLASS: pacific-gold-storage-policy
    CONTROL_PLANE_VM_CLASS: best-effort-small
    DEFAULT_STORAGE_CLASS: pacific-gold-storage-policy
    SERVICE_DOMAIN: cluster.local
    STORAGE_CLASSES: pacific-gold-storage-policy
    WORKER_STORAGE_CLASS: pacific-gold-storage-policy
    WORKER_VM_CLASS: best-effort-large
    CLUSTER_CIDR: 100.96.0.0/11
    SERVICE_CIDR: 100.64.0.0/13
    CONTROL_PLANE_MACHINE_COUNT: 1
    WORKER_MACHINE_COUNT: 5
    PROVIDER_TYPE: tkg-service-vsphere
    TKG_CLUSTER_ROLE: workload
    TKG_VERSION: v1.4.0
type: addons.cluster.x-k8s.io/resource-set
